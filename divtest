#!/bin/bash -eu

# Show the result of integer division and modulus for various tools or languages.
# Numerator and divisor can be specified on the command line, defaults are -255
# and 8.
#
# Without arguments, expect this output:
#
#              -255 / 8   -255 % 8
#            ---------- ----------
#    awk        -31.875         -7
#    bash           -31         -7
#    bc             -31         -7
#    c              -31         -7
#    dc             -31         -7
#    expr           -31         -7
#    nodejs     -31.875         -7
#    perl       -31.875          1
#    python2        -32          1
#    python3    -31.875          1
#    rust           -31         -7
#    tcl            -32          1
#
# Note this script assumes that all the prerequisites are already installed and
# will rudely choke if not.

set -o pipefail

die() { echo $* >&2; exit 1; }

# Set numerator and divisor
n=${1:--255}
d=${2:-8}

# sanity
[[ $n =~ ^-?[0-9]+$ && $d =~ ^-?[0-9]+$ ]] || die "Must specify integers"
(($d)) || die "Divisor cannot be 0"

# scratch directory, deleted at exit
tmp=$(mktemp -d)
trap 'rm -rf $tmp' EXIT

# build C binary
printf "%s\n" "#include <stdio.h>" "void main(void) {printf(\"%d %d\n\", $n/$d, $n%$d);}" | gcc -x c -o $tmp/c.out -

# build rust binary
printf "%s\n" "fn main() { println!(\"{} {}\", $n/$d, $n%$d); }" | rustc -o $tmp/rust.out -

# max column width
w=$((${#d} + ${#n} + 5))

# $w worth of dashes
bar() { eval printf -- "-%.0s" {1..$w}; }

# print formatted row
row() { printf "%-7s %${w}s %${w}s\n" "$1" "${2::$w}" "${3::$w}"; }

echo
row ""      "$n / $d" "$n % $d"
row ""      $(bar) $(bar)
row awk     $(awk "BEGIN{print $n/$d, $n%$d; exit}")
row bash    $((n / d)) $((n % d))
row bc      $(bc <<<"$n/$d; $n%$d")
row c       $($tmp/c.out)
row dc      $(dc -e "${n//-/_} ${d//-/_} / p ${n//-/_} ${d//-/_} % p") # negative sign is '_'
row expr    $(expr $n / $d) $(expr $n % $d)
row nodejs  $(nodejs <<<"console.log($n/$d, $n%$d)")
row perl    $(perl -e "print $n/$d, ' ', $n%$d")
row python2 $(python2 -c "print $n/$d, $n%$d")
row python3 $(python3 -c "print($n/$d, $n%$d)")
row rust    $($tmp/rust.out)
row tcl     $(tclsh <<<"puts \"[expr $n / $d] [expr $n % $d]\"")

echo
